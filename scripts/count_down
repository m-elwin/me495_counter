#!/usr/bin/env python
"""
Publishes a count that decreases once per second

PUBLISHERS:
   count (Count) ~ Publishes the count
"""

import rospy
from counter.msg import Count

class CounterTimer(object):
   """ Maintain a count in a timer callback 

       Attributes:
         timer: the timer object
         pub: publisher for the count
         count: the current count
    """
   def __init__(self):
     self.timer = rospy.Timer(rospy.Duration(1), self.callback)
     self.pub = rospy.Publisher("count", Count, queue_size = 10)
     self.count = 100

   def callback(self, event):
      self.pub.publish(Count(mode = "down", count = self.count))
      self.count -= 1

def main():
   rospy.init_node('count_down')
   c = CounterTimer()
   rospy.spin()

if __name__ == "__main__":
   try:
      main()
   except rospy.ROSInterruptException:
      pass

         
